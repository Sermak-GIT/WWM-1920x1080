/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wwm;

import com.sun.glass.events.KeyEvent;
import java.awt.Dimension;
import java.awt.Toolkit;
import static java.lang.System.out;
import java.util.ArrayList;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import util.Util;

/**
 *
 * @author Egidius Mysliwietz
 */
public class Players extends javax.swing.JFrame {

    ArrayList<String> players = new ArrayList();
    int take = 0;
    int storyTake = 0;
    String[] storytext = {"Mit meiner ", "Million\n", "m√∂chte i", "ch\n", "mi", "r ein\n", "Konzert ", "be", "i Hei", "no\n", "kau", "fen"};
    Timer timer = new Timer();
    boolean inName = false;
    
    /**
     * Creates new form Players
     */
    public Players() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setTitle("Background Stuff");
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(d.width, d.height);
        this.setVisible(true);
        //this.setAlwaysOnTop(true);
        labello.setBounds(0, 0, d.width, d.height);
        randomOrder();
        labelloMouseClicked(null);
        story.setText("");
        name.setText("");
        typing.setVisible(false);
        check.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typing = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        story = new javax.swing.JTextArea();
        check = new javax.swing.JLabel();
        labello = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        typing.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        typing.setText("start typing...");
        getContentPane().add(typing, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 1000, -1, -1));

        name.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nameMouseExited(evt);
            }
        });
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 870, 530, 80));

        story.setEditable(false);
        story.setColumns(20);
        story.setFont(new java.awt.Font("DialogInput", 1, 48)); // NOI18N
        story.setRows(5);
        story.setFocusable(false);
        story.setOpaque(false);
        getContentPane().add(story, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 50, 620, 750));

        check.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/general/logo.jpg"))); // NOI18N
        check.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkMouseClicked(evt);
            }
        });
        getContentPane().add(check, new org.netbeans.lib.awtextra.AbsoluteConstraints(1780, 960, 140, 120));

        labello.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/players/claudia-wwm.jpg"))); // NOI18N
        labello.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelloMouseClicked(evt);
            }
        });
        getContentPane().add(labello, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void labelloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelloMouseClicked
        try {
           labello.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/players/" + players.get(take) + "-wwm.jpg")));
            take += 1; 
            if (take == 4) {
                timer.scheduleAtFixedRate(new TimerTask() {
                    @Override
                    public void run() {
                        SwingUtilities.invokeLater(new Runnable() {
                            @Override
                            public void run() {
                                typing.setVisible(!typing.isVisible());
                            }
                        });
                    }
                }, 0, 1000l / 10l); // 10 frames per second
                typing.setVisible(true);
            }
        } catch(Exception e) {}
    }//GEN-LAST:event_labelloMouseClicked

    char last = ' ';
    boolean fertig = false;
    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        if (inName && take >= 4) {
            name.setText(name.getText() + evt.getKeyChar());
        } else {
            if (evt.getKeyChar() != last && take >= 4) {
                try {
                    timer.cancel();
                    typing.setVisible(false);
                    story.setText(story.getText() + storytext[storyTake]);
                    storyTake++;
                } catch(Exception e) {
                    fertig = true;
                }
            }
            last = evt.getKeyChar();
        }
        if(name.getText() != "" && name.getText() != null)
            check.setVisible(true);
    }//GEN-LAST:event_formKeyTyped

    private void nameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameMouseEntered
        inName = true;
    }//GEN-LAST:event_nameMouseEntered

    private void nameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameMouseExited
        inName = false;
    }//GEN-LAST:event_nameMouseExited

    private void checkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMouseClicked
        V.playername = name.getText();
        V.players = players;
        new Auswahl();
        dispose();
    }//GEN-LAST:event_checkMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel check;
    public javax.swing.JLabel labello;
    public javax.swing.JLabel name;
    public javax.swing.JTextArea story;
    public javax.swing.JLabel typing;
    // End of variables declaration//GEN-END:variables

    private void randomOrder() {
        Random r = new Random();
        while (players.size() < 4) {
           int j = r.nextInt(9);
           switch(j) {
            case 0: 
                if (!players.contains("andre"))
                    players.add("andre"); break;
            case 1: 
                if (!players.contains("moritz"))
                    players.add("moritz"); break;
            case 2:
                if (!players.contains("nicolas"))
                    players.add("nicolas"); break;
            case 3: 
                if (!players.contains("thomas"))
                    players.add("thomas"); break;
            case 4: 
                if (!players.contains("alexandra"))
                    players.add("alexandra"); break;
            case 5: 
                if (!players.contains("daniela"))
                    players.add("daniela"); break;
            case 6: 
                if (!players.contains("karl"))
                    players.add("karl"); break;
            case 7: 
                if (!players.contains("johannes"))
                    players.add("johannes"); break;
            case 8: 
                if (!players.contains("serdar"))
                    players.add("serdar"); break;
            }
        }
        players.set(3, "claudia");
    }
    
}